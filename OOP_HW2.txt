// Problem 1: Grading System (if else-if else)
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter marks: ");
        int mark = sc.nextInt();
        if(mark >= 90){
            System.out.println("Grade: A");
        }else if(mark >= 80){
            System.out.println("Grade: B");
        }else if(mark >= 70){
            System.out.println("Grade: C");
        }else if(mark >= 60){
            System.out.println("Grade: D");
        }else{
            System.out.println("Grade: F");
        }
        sc.close();
    }
}

----------------------------------------------------

// Problem 2: Odd or Even (if-else)
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = sc.nextInt();
        if(num % 2 == 0){
            System.out.println(num + " is Even");
        }else{
            System.out.println(num + " is Odd");
        }
        sc.close();
    }
}

----------------------------------------------------

// Problem 3: Sum of First N Natural Numbers (for loop)
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter N: ");
        int n = sc.nextInt();
        int sum = 0;
        for(int i = 1; i<=n; i++){
            sum += i;
        }
        System.out.print("Sum = "+ sum +" (");
        for(int i = 1; i<=n; i++){
            System.out.print(i);
            if(i<n){
                System.out.print("+");
            }
        }
        System.out.println(")");

        sc.close();
    }
}

----------------------------------------------------

// Problem 4: Multiplication Table (for loop)
import java.util.Scanner;
public class Main {
        public static void main(String[] args){
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter N: ");
            int n = sc.nextInt();
            for(int i = 1; i <= 10; i++){
                System.out.println(n  + " x " + i + " = " + i*n);
            }
            sc.close();
        }
}

----------------------------------------------------

// Problem 5: Find First Divisible by 7 (for loop + break)
public class Main {
    public static void main(String[] args){
        int target = 7;
        boolean notfound = true;
        int i = 2;
        while(notfound){
            if(target % i == 0){
                System.out.println("First number divisible by 7 is: " + i);
                notfound =  false;
            }
            i++;
        }
    }
}

----------------------------------------------------

//Problem 6: Print Odd Numbers (for loop + continue)
public class Main {
    public static void main(String[] args){
                for(int i = 1; i<= 20; i++){
            if(i%2 == 0){
                continue;
            }
            System.out.print(i + " ");
        }
    }
}

----------------------------------------------------

// Problem 7: Find Maximum in an Array (Array + for loop)
import java.util.Scanner;
public class Main{
    public static void main(String[] args){
        int[] num_array = new int[5];
        int max = 0;
        Scanner sc = new Scanner(System.in);
        for(int i = 0 ; i < 5; i++){
            num_array[i] = sc.nextInt();
            if(i == 0){
                max = num_array[0];
            }
            if(i > 0){
                if(num_array[i] > max){
                    max = num_array[i];
                }
            }
        }
        System.out.println("Maximum: " + max);
    }
}

----------------------------------------------------

// Problem 8: Reverse an Array (Array + for loop)
import java.util.Scanner;

public class Main {
    public static void main(String[] args){
    //  input
        Scanner sc = new Scanner(System.in);
        int[] ip = new int[5];
        int[] op = new int[5];
        for(int i = 0; i<5; i++){
            ip[i] = sc.nextInt();
        }
        for(int j = 4, i = 0; j>-1; j--, i++){
            op[i] = ip[j];
        }
        for(int num : op){
            System.out.print(num + " ");
        }
        sc.close();
    }
}

----------------------------------------------------

// Problem 9: Count Even and Odd Numbers in an Array
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        int[] in = new int[5];
        int cEven = 0, cOdd = 0;
        Scanner sc = new Scanner(System.in);
        for(int i = 0 ; i<5; i++){
            in[i]  = sc.nextInt();
            if(in[i] % 2 == 0){
                cEven ++;
            }else{
                cOdd ++;
            }
        }
        System.out.println("Even Count: " + cEven);
        System.out.println("Odd Count: " + cOdd);
    }
}

----------------------------------------------------

//Problem 10: Check Prime Number (for loop + if-else)
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = sc.nextInt();
        int c = 0;
        for(int i = 1; i<= num; i++){
            if(num % i == 0){
                c++;
            }
        }
        if(c == 2){
            System.out.println(num + " is a Prime Number");
        }else{
            System.out.println(num + " is not a Prime Number");
        }
        sc.close();
    }
}

----------------------------------------------------

// Problem 12: Pyramid Pattern (for loop)
public class Main {
    public static void main(String[] args){
        int n = 5;
        for(int a = 1; a<= n; a++){
            for(int b = 1; b<= n-a; b++){
                System.out.print(" ");
            }
            for(int c = 1; c <= a; c++){
                System.out.print("#");
                if(c >= 1){
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }
}
/*
    #
   # #
  # # #
 # # # #
# # # # #
*/

----------------------------------------------------

// Problem 13: Fibonacci Series (for loop)
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int a = 0;
        int b = 1;

        int next = 0;
        if(n == 1){
            System.out.println("0");
        }
        if(n == 2){
            System.out.println("0, 1");
        }
        if(n >= 3){
            System.out.print("0, 1, ");
            for(int i = 3; i<=n; i++){
                next = a + b;
                System.out.print(next);
                if(i<n){
                    System.out.print(", ");
                }
                a = b;
                b = next;
            }
            System.out.println();
        }
        sc.close();
    }
}

/*
10
0, 1, 1, 2, 3, 5, 8, 13, 21, 34
*/

----------------------------------------------------

//Problem 14: Factorial Using Recursion
import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter N: ");
        int n = sc.nextInt();
        int op = facto(n);
        System.out.println("Factorial of " + n +" = " + op );
        sc.close();
    }
    public static int facto(int n){
        if(n == 1 || n == 0){
            return 1;
        }
        return n * facto(n - 1);
    }
}

//Enter N: 5
//Factorial of 5 = 120

----------------------------------------------------

Problem 15:Design java class on
● Book
● Bank
● Hospital
● Library

public class Main {
    public static void main(String[] args){
        Book book1 = new Book("ABC English Book", "Arman", "xyz", 120);
        System.out.println("book1");
        book1.displayBookInfo();
        System.out.println();

        Bank bank1 = new Bank("Arman's Bank",2025,"DIU","Arman Hossen",1,"$10M");
        System.out.println("bank1");
        bank1.displayBankInfo();
        System.out.println();

        Hospital hospital1 = new Hospital("Mayer Dua Hospital", 2025, "Dottopara", "Arman Hossen", 1, 1);
        System.out.println("hospital1");
        hospital1.displayHospitalInfo();
        System.out.println();

        Library library1 = new Library("Baper Dua Library", 2025, "Rahat villa", "Arman Hossen", 302);
        System.out.println("library1");
        library1.displayLibraryInfo();
        System.out.println();
    }
}

public class Book {
    String BookName;
    String Writer;
    String Publisher;
    double Price;

    Book(String BookName, String Writer, String Publisher, double Price){
        this.BookName = BookName;
        this.Writer = Writer;
        this.Publisher = Publisher;
        this.Price = Price;
    }

    void displayBookInfo(){
        System.out.println("BookName: " + BookName);
        System.out.println("Writer: " + Writer);
        System.out.println("Publisher: " + Publisher);
        System.out.println("Price: " + Price);
    }
}

public class Bank {
    String name;
    String address;
    String Owner;
    int userNumber;
    String reserved;
    int year;

    Bank(String name, int year, String address, String Owner, int userNumber, String reserved){
        this.name = name;
        this.year = year;
        this.address = address;
        this.Owner = Owner;
        this.userNumber = userNumber;
        this.reserved = reserved;
    }
    void displayBankInfo(){
        System.out.println("name = " +  name);
        System.out.println("year = " +  year);
        System.out.println("address = " +  address);
        System.out.println("Owner = " +  Owner);
        System.out.println("userNumber = " +  userNumber);
        System.out.println("reserved = " +  reserved);
    }
}
        
        
public class Hospital {
        String name;
        String address;
        String Owner;
        int PatientNumber;
        int DoctorNumber;
        int year;

    Hospital(String name, int year, String address, String Owner, int PatientNumber, int DoctorNumber){
            this.name = name;
            this.year = year;
            this.address = address;
            this.Owner = Owner;
            this.PatientNumber = PatientNumber;
            this.DoctorNumber = DoctorNumber;
        }
        void displayHospitalInfo(){
            System.out.println("name = " +  name);
            System.out.println("year = " +  year);
            System.out.println("address = " +  address);
            System.out.println("Owner = " +  Owner);
            System.out.println("PatientNumber = " +  PatientNumber);
            System.out.println("DoctorNumber = " +  DoctorNumber);
        }

}


public class Library {
        String name;
        String address;
        String Owner;
        int TotalBook;
        int year;

    Library(String name, int year, String address, String Owner, int TotalBook){
            this.name = name;
            this.year = year;
            this.address = address;
            this.Owner = Owner;
            this.TotalBook = TotalBook;
        }
        void displayLibraryInfo() {
            System.out.println("name = " + name);
            System.out.println("year = " + year);
            System.out.println("address = " + address);
            System.out.println("Owner = " + Owner);
            System.out.println("TotalBook = " + TotalBook);
        }
}

----------------------------------------------------
//Problem 16: Add and Display Elements in an ArrayList
import java.util.ArrayList;
public class Main {
    public static void main(String[] args){
        
        ArrayList<Integer> nums = new ArrayList<Integer>(); // datatype "Integer", not int,
        nums.add(10);
        nums.add(15);
        nums.add(20);
        nums.add(25);
        nums.add(30);
//      for(int i = 0; i<nums.size(); i++){
//               System.out.println(nums.get(i));
//      }
        System.out.println(nums);
    }
}


----------------------------------------------------

import java.util.ArrayList;
public class Main {
    public static void main(String[] args){
        //Problem 17: Remove Even Numbers from an ArrayList
        ArrayList<Integer> nums = new ArrayList<Integer>(); // datatype "Integer", not int,
        nums.add(10);
        nums.add(15);
        nums.add(20);
        nums.add(25);
        nums.add(30);
      for(int i = 0; i<nums.size(); i++){
          if(nums.get(i) % 2 == 0) {
            nums.remove(i);
          }
          //System.out.println(nums.get(i));
      }
      System.out.println(nums);
    }
}


----------------------------------------------------

//Problem 18: Check if an Element Exists in an ArrayList
import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> nums = new ArrayList<Integer>(); // datatype "Integer", not int,
//        nums.add(3);
//        nums.add(8);
//        nums.add(12);
//        nums.add(15);
//        nums.add(21);
        for(int i = 1; i<=5; i++){
            int n = sc.nextInt();
            nums.add(n);
        }
        int d = 0;
        System.out.print("Search: ");
        int target = sc.nextInt();
        for(int i = 0; i<nums.size(); i++){
            if(nums.contains(target)) {
                d++;
            }
            //System.out.println(nums.get(i));
        }
        if(d!=0){
            System.out.println(target + " exists in the list.");
        }else {
            System.out.println(target + " doesn't exists in the list.");
        }
        sc.close();
    }
}


----------------------------------------------------

//Problem 19: Sort an ArrayList
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = 5;
        int num;
        ArrayList<Integer> ns = new ArrayList<Integer>(n);
        for(int i = 0; i<n; i++){
            num = sc.nextInt();
            ns.add(num);
        }
        Collections.sort(ns); //in ascending order
        System.out.println(ns);
//        42 12 89 33 5
//        [5, 12, 33, 42, 89]
    }
}

----------------------------------------------------

//Problem 20: Reverse an ArrayList
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = 5;
        int num;
        ArrayList<Integer> ns = new ArrayList<Integer>(n);
        for(int i = 0; i<n; i++){
            num = sc.nextInt();
            ns.add(num);
        }
        //Collections.sort(ns, Collections.reverseOrder()); // descending order
        Collections.reverse(ns); //in Reverse order
        System.out.println(ns);
//        42 12 89 33 5
//        [5, 33, 89, 12, 42]
    }
}


----------------------------------------------------

//Problem 21: Add and Display Strings in an ArrayList
import java.util.ArrayList;
import java.util.Scanner;
    public class Main {
        public static void main(String[] args){
            Scanner sc = new Scanner(System.in);
            ArrayList<String> names = new ArrayList<String>();
            for(int i = 1; i<=5; i++){
                String n = sc.nextLine();
                names.add(n);
            }
            System.out.println(names);
//            Apple
//            Banana
//            Cherry
//            Mango
//            Orange
//            [Apple, Banana, Cherry, Mango, Orange]
            sc.close();
        }
}

----------------------------------------------------


//Problem 22: Find the Longest String in an ArrayList
import java.util.ArrayList;
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        ArrayList<String> names = new ArrayList<String>();
        for(int i = 1; i<=5; i++){
            String n = sc.nextLine();
            names.add(n);
        }
        int siz = (names.get(0)).length();
        int idx = 0;
        for(int i = 0; i<5; i++){
            if((names.get(i)).length() > siz){
                siz = (names.get(i)).length();
                idx = i;
            }
        }
        System.out.println("Longest String: " + names.get(idx));
        sc.close();
    }
}

//a
//arman
//hossen
//ripon
//ali
//Longest String: hossen
----------------------------------------------------

//Problem 23: Convert ArrayList to Uppercase
import java.util.ArrayList;
import java.util.Scanner;
public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        ArrayList<String> names = new ArrayList<String>();
        for(int i = 1; i<=5; i++){
            String n = sc.nextLine();
            n = n.toUpperCase();
            names.add(n);
        }
        System.out.println(names);
        sc.close();
    }
}

----------------------------------------------------
24 ~ 25.
public class BankAccount {
    String accountNumber;
    String accountHolderName;
    int balance;
    BankAccount(String accountNumber, String accountHolderName, int balance){
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        this.balance = balance;
    }

    void deposit(int dAmount){
        if(dAmount>0){
            balance += dAmount;
            System.out.println("Deposite : +" + dAmount + " BDT");
            System.out.println("New Balance: " + balance + " BDT");
        }else {
            System.out.println("Deposit Amount Can't be Negative!");
        }

    }
    void withdraw(int wdAmount){
        if(wdAmount >  balance){
            System.out.println("Withdrawal exceeds the balance");
        }
        else if(wdAmount < 0){
            System.out.println("Withdraw Amount Can't be Negative!");
        }
        else{
            balance -= wdAmount;
            System.out.println("withdraw: -"+wdAmount + " BDT");
            System.out.println("New Balance: " + balance + " BDT");
        }
    }
    //withdrawal exceeds the balance, display an appropriate message

    void displayAccountInfo(){
        System.out.println("Owner Name: " + accountHolderName);
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Current Balance: $" + balance);
    }
//    void showBalance(){
//        System.out.println("Balance: " + balance);
//    }
}

//Design a class called BankAccount that models a bank account
//with attributes like accountNumber, accountHolderName, and
//balance. Implement methods to deposit and withdraw money. If a
//withdrawal exceeds the balance, display an appropriate message.
//Questions:
//1. Create the BankAccount class with the appropriate attributes.
//2. Write methods for deposit and withdraw.
//3. Demonstrate creating an object of this class and performing a few transactions.

public class Main {
    public static void main(String[] args){
        BankAccount a1 = new BankAccount("A001","Arman Hossen Ripon",200);

        a1.displayAccountInfo();
        System.out.println();

        a1.withdraw(10);
        System.out.println();

        a1.deposit(3000);
        System.out.println();

        a1.deposit(40);
        System.out.println();
    }
}

----------------------------------------------------
Practice 
OOP Varsity Tasks
<<<<<<< HEAD

HW1
01. You are asked to develop the "University Course Enrollment System". 
Thus, you need toperform the OOP analysis in theses ways:
01. Find the number of classes
02. Find the attributes and methods
03. Find the relationship among classes .
Specifically identify One-to-One associations,One-to-Many associations, Many-to-Many associations.
04. Draw the UML diagram highlighting relevant features, methods, and relationships.
05. Write actual Java code that reflects the UML model, using proper class structure,constructors, 
methods, and relationship implementation (e.g., object references,ArrayLists for associations).

2.You are asked to develop the "Hospital management System". 
Thus, you need to perform theOOP analysis in theses ways:
01. Find the number of classes
02. Find the attributes and methods
03. Find the relationship among classes. 
Specifically identify One-to-One associations,One-to-Many associations, Many-to-Many associations.
04. Draw the UML diagram highlighting relevant features, methods, and relationships.
05. Write actual Java code that reflects the UML model, using proper class structure,constructors, methods,
and relationship implementation (e.g., object references,ArrayLists for associations).
=======
>>>>>>> 50626cb5b403d6cb6019aee5757494f7300d6819
